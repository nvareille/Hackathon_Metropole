@page "/resources"
@using Database
@using API.Siret.Model
@using Blazored.LocalStorage
@using HMetropole.Client.Logic
@using HMetropole.Shared
@using HMetropole.Shared.Models
@using HMetropole.Shared.Payloads
@using HMetropole.Shared.Results
@using Theme = HMetropole.Shared.Models.Theme

@inject HttpClient Client
@inject ISyncLocalStorageService LocalStorage
@inject NavigationManager Router

<h3>Resources</h3>

@if (Step == Step.Step1)
{
    <Loader/>
}
else if (Step == Step.Step2)
{
    foreach (Theme theme in Infos.Themes)
    {
        int id = theme.Id;

        <button class="btn btn-primary m-1" @onclick="() => DisplaySousThemes(id)">@theme.Name</button>
    }
    <hr/>

    if (SelectedTheme != 0)
    {
        foreach (SubTheme stheme in Infos.Themes.First(i => i.Id == SelectedTheme).SubThemes)
        {
            int id = stheme.Id;

            <button class="btn btn-primary m-1" @onclick="() => LoadThreads(id)">@stheme.Name</button>
        }
        <hr/>
    }

    if (Display != null)
    {
        <ul>
            @foreach (Resource t in Display)
            {
                <li><a href="@t.URL" target="_blank">@t.Name</a></li>
            }
        </ul>
        
    }
}



@code
{
    private ForumConfigResult Infos;

    private IEnumerable<Resource> Result;
    private IEnumerable<Resource>? Display;

    private int SelectedTheme;

    private Step Step;

    protected override async Task OnInitializedAsync()
    {
        string user = LocalStorage.GetItem<string>("user");
        Infos = await Client.GetFromJsonAsync<ForumConfigResult>($"api/Forum/");
        Result = await Client.GetFromJsonAsync<IEnumerable<Resource>>("api/Resource");

        Step = Step.Step2;

        await base.OnInitializedAsync();
    }

    private void DisplaySousThemes(int id)
    {
        SelectedTheme = id;
        StateHasChanged();
    }

    private async Task LoadThreads(int id)
    {
        Display = Result.Where(i => i.SousTheme == id);
        StateHasChanged();
    }
}
