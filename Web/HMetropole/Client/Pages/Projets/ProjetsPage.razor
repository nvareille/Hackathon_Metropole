@page "/projets"
@using Database
@using API.Siret.Model
@using Blazored.LocalStorage
@using HMetropole.Client.Logic
@using HMetropole.Shared
@using HMetropole.Shared.Models
@using HMetropole.Shared.Payloads
@using HMetropole.Shared.Results
@using Theme = HMetropole.Shared.Models.Theme
@using Projet = HMetropole.Shared.Models.Projet

@inject HttpClient Client
@inject ISyncLocalStorageService LocalStorage
@inject NavigationManager Router

<h3>Projets</h3>

@if (Step == Step.Step1)
{
    <Loader/>
}
else if (Step == Step.Step2)
{
    foreach (Theme theme in Infos.Themes)
    {
        int id = theme.Id;

        <button class="btn btn-primary m-1" @onclick="() => DisplaySousThemes(id)">@theme.Name</button>
    }
    <hr/>

    if (SelectedTheme != 0)
    {
        foreach (SubTheme stheme in Infos.Themes.First(i => i.Id == SelectedTheme).SubThemes)
        {
            int id = stheme.Id;

            <button class="btn btn-primary m-1" @onclick="() => LoadThreads(id)">@stheme.Name</button>
        }
        <hr/>
    }

    if (Display != null)
    {
        foreach (Projet p in Display)
        {
            <div class="question">
                <div class="decal">
                    <h5>@Result.Entreprises.First(i => i.Id == p.Entreprise).Name - @p.Name</h5>
                    @((MarkupString) p.GetMarkup())
                </div>
            </div>
        }
    }
}



@code
{
    private ForumConfigResult Infos;

    private ProjetResult Result;
    private IEnumerable<Projet>? Display;

    private int SelectedTheme;

    private Step Step;

    protected override async Task OnInitializedAsync()
    {
        string user = LocalStorage.GetItem<string>("user");
        Infos = await Client.GetFromJsonAsync<ForumConfigResult>($"api/Forum/");
        Result = await Client.GetFromJsonAsync<ProjetResult>($"api/Projet/");

        Step = Step.Step2;

        await base.OnInitializedAsync();
    }

    private void DisplaySousThemes(int id)
    {
        SelectedTheme = id;


        StateHasChanged();
    }

    private void LoadThreads(int id)
    {
        Display = Result.Projets.Where(i => i.SousTheme == id);
        Console.WriteLine(id);
        StateHasChanged();
    }
}
